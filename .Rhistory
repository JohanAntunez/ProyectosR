price <- 100
if(price<100){
print("<100")
}else{
print(">100")
}
quality <- c(1,1,2,1,2)
ifelse(quality == 1., 'Yes', 'No')
print(quiality)
quality <- c(1,1,2,1,2)
print(quiality)
quality <- c(1,1,2,1,2)
print(quality)
price <- c(58,100,110)
if(price<100){
print("<100")
}else if(price== 100){
print(">100")
}
price <- c(58,100,110)
if(price<100){
print("<100")
}else if(price== 100){
print(">100")
}
price <- c(58,100,110)
if(all(price<100)){
print("Todos <100")
}
if(any(price<100)){
print("Alguno <100")
}
days <- function(x){
switch(x,
Mon = "Monday",
Tue = "Tuesday",
Wed = "Wednesday",
Thu = "Thursday",
Fri = "Friday",
)
}
days <- function(x){
switch(x,
Mon = "Monday",
Tue = "Tuesday",
Wed = "Wednesday",
Thu = "Thursday",
Fri = "Friday",
"Weekend")
}
days <- function(x){
switch(x,
Mon = "Monday",
Tue = "Tuesday",
Wed = "Wednesday",
Thu = "Thursday",
Fri = "Friday",
"Weekend")
}
days("Mon")
days <- function(x){
switch(x,
Mon = "Monday",
Tue = "Tuesday",
Wed = "Wednesday",
Thu = "Thursday",
Fri = "Friday",
"Weekend")
}
days("Mon")
days(5)
days(5)
days <- function(x){
switch(x,
Mon = "Monday",
Tue = "Tuesday",
Wed = "Wednesday",
Thu = "Thursday",
Fri = "Friday",
"Weekend")
}
days("Mon")
days(7)
quality <- c(1:5)
avg_qty <- function(qty, type){
switch(type,
arithmetic = mean(quantity),
geometric = prod(quantity)^(1/length(quantity))
)
}
avg_qty(quantity,geometric )
quantity <- c(1:5)
avg_qty <- function(qty, type){
switch(type,
arithmetic = mean(quantity),
geometric = prod(quantity)^(1/length(quantity))
)
}
avg_qty(quantity,geometric )
quantity <- c(1:5)
quantity <- c(1:5)
avg_qty <- function(qty, type){
switch(type,
arithmetic = mean(quantity),
geometric = prod(quantity)^(1/length(quantity))
)
}
avg_qty(quantity,"geometric" )
switch(type,
arithmetic = mean(quantity),
geometric = prod(quantity)^(1/length(quantity))
)
quantity <- c(1:5)
avg_qty <- function(qty, type){
switch(type,
arithmetic = mean(quantity),
geometric = prod(quantity)^(1/length(quantity))
)
}
avg_qty(quantity,"arithmetic" )
avg_qty(quantity,"geometric" )
cart <- c("apple", "cookie", "lemon")
for(product in cart){
print(prodcut)
}
cart <- c("apple", "cookie", "lemon")
for(product in cart){
print(product)
}
price_discounted <- c(1)
price <- c(30,120,50,70,150,100,50,25,110)
for (i in 1: lenght(price)){
price_discounted[i] <- price[i] - price[i] * 0.1
print(pprice_discounted[i])
}
price_discounted <- c(1)
price <- c(30,120,50,70,150,100,50,25,110)
for (i in 1: length(price)){
price_discounted[i] <- price[i] - price[i] * 0.1
print(pprice_discounted[i])
}
price_discounted <- c(1)
price <- c(30,120,50,70,150,100,50,25,110)
for (i in 1: length(price)){
price_discounted[i] <- price[i] - price[i] * 0.1
print(price_discounted[i])
}
price_discounted <- c(1)
price <- c(30,120,50,70,150,100,50,25,110)
for (i in 1: length(price)){
price_discounted[i] <- price[i] - price[i] * 0.1
print(price_discounted[i])
}
print(price_discounted)
while(index < 3){
print(paste("Index is ", index))
index <- index +1
}
index <- 1
while(index < 3){
print(paste("Index is ", index))
index <- index +1
}
index <- 1
while(index < 3){
print("Index is ", index)
index <- index +1
}
x <- 1
repeat{
print(x)
x <- x + 1
if(x == 3){
break
}
}
x <- 1
repeat{
print(x)
x++ 1
if(x == 3){
break
}
}
x <- 1
repeat{
print(x)
x <- x + 1
if(x == 3){
break
}
}
setwd("C:\Users\CC7\Documents\Johan\Archivos")
setwd("C:\Users\CC7\Documents\Johan\Archivos")
setwd("C:\Users\CC7\Documents\Johan\Archivos")
setwd("C:\\Users\\CC7\\Documents\\Johan\\Archivos")
setwd("C:\\Users\\CC7\\Documents\\Johan\\Archivos")
maraton <- read.csv("maraton_ny.csv",
header = T,
row.names = 1,
sep = ",",
dec = ".")
class(maraton)
dim(maraton)
names(maraton)
maraton <- read.csv("maraton_ny.csv",
header = 1,
row.names = T,
sep = ",",
dec = ".")
maraton
maraton
View(maraton)
class(maraton)
matriz <- matrix(1:10)
matriz <- matrix(1:10)
class(matriz)
dim(maraton)
names(maraton)
str(maraton)
nrow(maraton)
library("dplyr")
nrow(maraton)
install.packages("dplyr")
library("dplyr")
glimpse(maraton)
summary(maraton)
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
load("~/Johan/PryectosR/.RData")
data()
meses <-c('enero','Febrero', 'Marzo')
source("~/.active-rstudio-document")
meses
objetivo <- c(T,F,T)
ventas <- c(120,100,80)
rm(list = ls())
meses <-c('enero','Febrero', 'Marzo')
meses
ventas <- c(120,100,80)
objetivo <- c(T,F,T)
datos <- data.frame(meses, ventas , objetivos)
datos <- data.frame(meses, ventas , objetivo)
datos
str(datos)
meses <-c('enero','Febrero', 'Marzo')
meses
ventas <- c(120,100,80)
objetivo <- c(T,F,T)
datos <- data.frame(meses, ventas , objetivo)
str(datos)
str(iris)
# STR da mas informas acerca de la funcion
summary(datos)
data()
head(AirPassengers)
tail(AirPassengers)
# muesra mas informacion acercaq de los datos
head(AirPassengers)
datos [2,2]
datos [1, 'ventas']
datos [2,'objetivo']
datos [1,c('meses','objetivo')]
meses <-c('enero','Febrero', 'Marzo')
meses
ventas <- c(120,100,80)
objetivo <- c(T,F,T)
datos <- data.frame(meses, ventas , objetivo)
str(datos)
str(iris)
# STR da mas informas acerca de la funcion
summary(datos)
# muesra mas informacion acercaq de los datos
head(AirPassengers)
# muestra los primeros 5 datos
tail(AirPassengers)
# muestra los ultimos 5 datos
datos
datos [2,2]
datos [1, 'ventas']
datos [2,'objetivo']
datos [1,c('meses','objetivo')]
subset(datos, subset = ventas>=100)
orden <- order(datos['ventas'])
datos [orden]
orden.de <- order(-datos['ventas'])
datos [orden]
datos [orden.de]
datos [orden]
datos [orden,]
datos [orden.de,]
datos$ventas
# acceder a filas
datos['objetivos']
# acceder a filas
datos['objetivo']
meses <-c('enero','Febrero', 'Marzo')
meses
ventas <- c(120,100,80)
objetivo <- c(T,F,T)
datos <- data.frame(meses, ventas , objetivo)
str(datos)
str(iris)
# STR da mas informas acerca de la funcion
summary(datos)
# muesra mas informacion acercaq de los datos
head(AirPassengers)
# muestra los primeros 5 datos
tail(AirPassengers)
# muestra los ultimos 5 datos
datos
datos [2,2]
datos [1, 'ventas']
datos [2,'objetivo']
datos [1,c('meses','objetivo')]
# Busquedas especificas
subset(datos, subset = ventas>=100)
#ordenar
orden <- order(datos['ventas'])
datos [orden,]
orden.de <- order(-datos['ventas'])
datos [orden.de,]
datos [1, 'ventas']
# acceder a columnas
datos$ventas
# acceder a filas
datos['objetivo']
numeros <- (1:10)
letras <- letters[1:10]
data <- data.frame(col1 = numeros, col2 = letras)
data
# Busquedas especificas
subset(datos, subset = ventas>=100)
write.csv(data,file = 'data.csv')
datos2$x <- N
# Busquedas especificas
subset(datos, subset = ventas>=100)
datos2 <- read.csv('data.csv')
datos2 <- read.csv('data.csv')
datos2$x <- NULL
datos2
datos2$X <- NULL
datos2
datos1 <- data.frame(numeros, letras)
datos1
datos2 <- data.frame(numeros = 11, letras ='k')
datos2
datos3 <- rbind(datos1,datos2)
datos3
datos3$multiplicacion <- datos3$numeros * 2
datos3
colnames(datos3)
colnames(datos3) <- c('c1','c2','c3')
datos3
colnames(datos3)[3] <- 'Nueva'
data <- data.frame(col1 = numeros, col2 = letras)
datos3
datso3[datos$c1>6,]
datos3[datos3$c1>6,]
meses <-c('enero','Febrero', 'Marzo')
meses
ventas <- c(120,100,80)
objetivo <- c(T,F,T)
datos <- data.frame(meses, ventas , objetivo)
str(datos)
str(iris)
# STR da mas informas acerca de la funcion
summary(datos)
# muesra mas informacion acercaq de los datos
head(AirPassengers)
# muestra los primeros 5 datos
tail(AirPassengers)
# muestra los ultimos 5 datos
datos
datos [2,2]
datos [1, 'ventas']
datos [2,'objetivo']
datos [1,c('meses','objetivo')]
# Busquedas especificas
subset(datos, subset = ventas>=100)
#ordenar
orden <- order(datos['ventas'])
datos [orden,]
orden.de <- order(-datos['ventas'])
datos [orden.de,]
datos [1, 'ventas']
# acceder a columnas
datos$ventas
# acceder a filas
datos['objetivo']
numeros <- (1:10)
letras <- letters[1:10]
data <- data.frame(col1 = numeros, col2 = letras)
data
write.csv(data,file = 'data.csv')
datos2 <- read.csv('data.csv')
datos2$X <- NULL
datos2
#combinar data frames
datos1 <- data.frame(numeros, letras)
datos1
datos2 <- data.frame(numeros = 11, letras ='k')
datos2
datos3 <- rbind(datos1,datos2)
datos3
datos3$multiplicacion <- datos3$numeros * 2
datos3
colnames(datos3)
colnames(datos3) <- c('c1','c2','c3')
datos3
colnames(datos3)[3] <- 'Nueva'
datos3
datos3[datos3$c1>6,]
rm(list = ls())
nombre <- ('Antonia','Maria','Juan')
nombre <- c('Antonia','Maria','Juan')
edad <- c(40,30,35)
sexo <- c('M','F','M')
datos <- data.frame(nombre, edad , sexo)
datos
str(iris)
flores [iris$Species]
#1
iris$Species
flores <- iris$Species
flores
flores <- table(iris$Species)
flores
summary(iris)
summary(iris$Species = 'setosa')
summary(iris$Species)
sd(iris$Species= 'setosa')
#2
subset(iris, subset Species= 'setosa')
#2
subset(iris, subset = Species= 'setosa')
#2
subset(iris, subset = species = 'setosa')
#2
subset(iris, subset = species )
#2
flores
iris$Species
iris$Species = setosa
iris$Species = 'setosa'
iris$Species = 'setosa'
View(iris)
View(iris)
View(datos)
iris$Species ['setosa']
iris
rm(list = ls())
#2
iris
#2
iris$Species['setosa']
#2
iris$Species,'setosa'
#2
iris$Species,'setosa'
#2
iris$Species
#2
iris$Species[1:50]
#2
iris
sd(iris$Species[1:50])
desviacion_setosa <- iris$Species[1:50]
desviacion_setosa
sd(esviacion_setosa)
sd(desviacion_setosa)
#2
sd(iris)
#2
sd(iris,'species')
desviacion_setosa <- iris$Species[1:4,sd]
desviacion_setosa <- iris$Species(1:4,sd)
rm(list = ls())
florSetosa <- subset(iris, Species == 'setosa')
desviacionEstandar <- apply(florSetosa[,1:4], 2, sd)
desviacionEstandar
str(iris)
setosaWidth <- subset(iris, Petal.Width == 'setosa')
desviacionEstandar2 <- apply(setosaWidth[,1:4], 2, sd)
desviacionEstandar2
rm(list = ls())
#1
summary(iris$Species)
#2
florSetosa <- subset(iris, Species == 'setosa')
desviacionEstandar <- apply(florSetosa[,1:4], 2, sd)
desviacionEstandar
#3
desviacionAnchura <- subset(iris, Species == "setosa")
desviacionFinal <- sd(desviacionAnchura$Petal.Width)
desviacionFinal
#4
desviacionDistintas <- aggregate(Petal.Width ~ Species, data = iris, sd)
desviacionDistintas
#1
summary(iris$Species)
#2
florSetosa <- subset(iris, Species == 'setosa')
desviacionEstandar <- apply(florSetosa[,1:4], 2, sd)
desviacionEstandar
#3
desviacionAnchura <- subset(iris, Species == "setosa")
desviacionFinal <- sd(desviacionAnchura$Petal.Width)
desviacionFinal
#4
desviacionDistintas <- aggregate(Petal.Width ~ Species, data = iris, sd)
desviacionDistintas
